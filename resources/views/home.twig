{% extends "layouts/app.twig" %}

{% block content %}

{% if messages.status %}
  {% include "partials/message.twig" with { 'message': messages.status | first } %}
{% endif %}
<!-- alert component -->
<!--
  UI Design Prototype
  Link : https://dribbble.com/shots/10452538-React-UI-Components
-->
<form action="/payments" method="post" class="py-6 flex flex-col justify-center py-12 md:py-3" id="cardForm">
  <div class="relative py-3 sm:max-w-xl sm:mx-auto">
    <div class="relative px-4 py-10 bg-white mx-8 md:mx-0 shadow border-2 border-gray-300 rounded-3xl sm:p-10">
      <div class="max-w-md mx-auto">
        <div class="flex items-center space-x-5">
          <div class="h-14 w-14 bg-blue-300 rounded-full flex flex-shrink-0 justify-center items-center text-white text-2xl font-mono">i</div>
          <div class="block pl-2 font-semibold text-xl self-start text-gray-700">
            <p class="text-sm text-gray-500 font-normal leading-relaxed">Please do not use any real information. This is a simple demo, meant to collect dummy data.</p>
          </div>
        </div>
        <div class="">
          <div class="py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7">
            <div class="flex flex-col">
              <label class="leading-loose" for="name">Your Name</label>
              <input type="text" name="name" id="card-name" class="px-4 py-2 border-2 focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 focus:outline-none text-gray-600" placeholder="Your Name" required>
            </div>
            <div class="flex flex-col">
              <label class="leading-loose" for="email">Email</label>
              <input type="email" name="email" id="card-email" class="px-4 py-2 border-2 focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 focus:outline-none text-gray-600" placeholder="Email" required>
            </div>
            <div class="flex flex-col">
              <label class="leading-loose" for="card">Card Details</label>
              <div class="bg-blue-100 p-6 rounded-xl">
                <div id="card">

                </div>
              </div>
            </div>
          </div>
          <div class="pt-4 flex items-center space-x-4">
              <button class="flex justify-center items-center w-full text-gray-900 bg-gray-200 px-4 py-3 rounded-md focus:outline-none">
                <svg class="w-6 h-6 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg> Cancel
              </button>
              <button type="submit" class="bg-red-300 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none">Create</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</form>
{% endblock %}

{% block scripts %}
    <script>

        let stripe = Stripe('{{ env("STRIPE_KEY") }}');

        const elements = stripe.elements();

        const cardElement = elements.create('card', {
            style: {
                base: {
                    fontSize: '16px'
                }
            }
        });

        const cardForm = document.getElementById('cardForm')

        const cardName = document.getElementById('card-name')

        const cardEmail = document.getElementById('card-email')

        cardElement.mount('#card');

        cardForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            const { paymentMethod, error } = await stripe.createPaymentMethod({
                type: 'card',
                card: cardElement,
                billing_details :{
                    name: cardName.value,
                    email: cardEmail.value,
                },
            });

            //error hanlding
            if(error){
                console.log(error);
            } else {
                //console.log(paymentMethod);
                let input = document.createElement('input');

                input.setAttribute('type','hidden');
                input.setAttribute('name', 'payment_method');
                input.setAttribute('value', paymentMethod.id);

                cardForm.appendChild(input);

                cardForm.submit();
            }

            //console.log(paymentMethod);
        });
    </script>
{% endblock %}